<script src="linked-charts.min.js"></script> ///.../html
<link rel="stylesheet" type="text/css" href="linked-charts.css"> ///.../html
///...
<script>///.../html
  inputData = [{"CellLine":"Pa16C","Drug":"Galunisertib","minConc":1, ...}, ... ];///...
</script>///.../html
///...
<table><tr>///.../html/layout
  <td id="heatmap" valign="top"></td>///.../html/layout
  <td id="scatterplot" valign="top"></td>///.../html/layout
</tr></table>///.../html/layout
///...
<script>///.../html
inputData = lc.separateBy(inputData, ["screen", "Drug", "CellLine"]);///.../ms
var drugs = Object.keys(inputData.RTG),///.../ms
  cellLines = Object.keys(inputData.RTG[drugs[0]]);///.../ms
///...
var selDrugs = [drugs[0], drugs[1]],///.../ms
  selCellLine = cellLines[0];///.../ms
///...
var heatmap = lc.heatmap()///scatter/ms
  .value( function( rowId, colId ) {///value/ms 
    var selCL = [];///selectedCellLines/ms
    if(scatterplot)///ifdefined/ms
      selCL = scatterplot.get_marked()///get_marked/ms
        .filter( function( e ) { return e[0] == "layer0"} )///get_marked/ms
        .map( function( e ) { return e[1] } );///get_marked/ms
    if( selCL.length < 2 ) selCL = cellLines;///ifempty/ms
///
    var rowValues = selCL.map(function( e ) {///calcValues/ms
        return inputData.RTG[rowId][e].avInh;///calcValues/ms
      }),///calcValues/ms
      colValues = selCL.map(function( e ) {///calcValues/ms
        return inputData.RTG[colId][e].avInh;///calcValues/ms
      });///calcValues/ms
    return lc.pearsonCorr( rowValues, colValues );///calcValues/ms 
   })///value/ms
  .rowIds( drugs )///.../ms
  .colIds( drugs )///.../ms
  .title( "Drug-drug correlation" )///.../ms
  .colourDomain( [ -1, 1 ] )///.../ms
  .margins({top: 50, left: 50, right: 100, bottom: 100})///.../ms    
  .palette( function( val ) { return d3.interpolateRdBu( 1 - val ); } )///.../ms 
  .on_click( function( rowId, colId ) {///.../ms 
     selDrugs = [rowId, colId]///.../ms 
     scatterplot.update();///.../ms 
     curveFit.update();///.../ms 
  })///.../ms 
  .cluster( "Row" )///.../ms
  .cluster( "Col" )///.../ms  
  .showLegend( false )///.../ms
  .place( "#heatmap" );///scatter/ms
///
var heatmapSlider = lc.colourSlider()///scatter/ms
	.straightColourScale( heatmap.colourScale )///.../ms
	.on_change(function(){///.../ms
		heatmap.updateCellColour();///.../ms
	})///.../ms
  .place( "#heatmap" );///scatter/ms
///...
heatmap.colour( function( val ){///.../ms
	return heatmapSlider.colourScale( val );///.../ms
} );///.../ms
///...
var get_curve = function( drug, cellLine, x ){///.../ms
  var max = inputData.RTG[drug][cellLine].max,///.../ms
    min = inputData.RTG[drug][cellLine].min,///.../ms
    IC50 = inputData.RTG[drug][cellLine].IC50,///.../ms
    slope = inputData.RTG[drug][cellLine].Slope,///.../ms
    minConc = inputData.RTG[drug][cellLine].minConc;///.../ms
///...      
  return min + ( max - min )/ ///.../ms
    (1 + Math.pow( 10, - ( x - Math.log10( IC50/minConc ) ) * slope));///.../ms
}///.../ms
///...
var scatterplot = lc.scatter()///scatter/ms
  .width( 300 )///.../ms
  .height( 300 )///.../ms
  .elementIds( cellLines )///.../ms
  .x( function( k ) { return inputData.RTG[selDrugs[0]][k].avInh } )///.../ms
  .y( function( k ) { return inputData.RTG[selDrugs[1]][k].avInh } )///.../ms
  .axisTitleX( function() {return selDrugs[0]} )///.../ms
  .axisTitleY( function() {return selDrugs[1]} )///.../ms
  .title( "Average inhibition" )///.../ms
  .domainX( [-10, 50] )///.../ms
  .domainY( [-10, 50] )///.../ms
  .palette( ["green", "yellow","red"] )///.../ms
  .colourValue( function( k ) { ///.../ms
    var res = 0;///.../ms
    for( var x = 0; x < 5; x++ )///.../ms
      for( var l = 0; l < 2; l++ )///.../ms
        res += Math.pow( get_curve( selDrugs[l], k, x ) - ///.../ms
                    inputData.RTG[selDrugs[l]][k]["D" + (x + 1)], 2 ); ///.../ms
    res = Math.sqrt( res );///.../ms
    return res;///.../ms
  })///.../ms
  .colourDomain( [ 0, 30 ] ) ///.../ms
  .on_click( function( k ) {///.../ms
    selCellLine = k; ///.../ms
    curveFit.update();///.../ms
  })///.../ms
  .showLegend( false );///.../ms
lc.xLine( "line", scatterplot )///scatter/ms
  .lineFun( function( x ){ ///.../ms
    return x;///.../ms
  })///.../ms
  .markedUpdated( heatmap.updateCellColour )///markedUpdated/ms
  .place( "#scatterplot" );///scatter/ms
///...
var layer = scatterplot.get_layer( "layer0" );///.../ms
///...
var scatterSlider = lc.colourSlider()///scatter/ms
	.width( 300 )///.../ms
	.height( 110 )///.../ms
	.set_margins( {top: 50} )///.../ms
	.title( "Total curvefitting error" )///.../ms
	.straightColourScale( layer.colourScale )///.../ms
	.on_change( function(){///.../ms
		layer.updateElementStyle();///.../ms
	} )///.../ms
  .place( "#scatterplot" );///scatter/ms
///...
layer.colour(function( id ){ ///.../ms
	return scatterSlider.colourScale( layer.get_colourValue( id ) );///.../ms
});///.../ms
///...
var curveFit = lc.scatter( "points" )///scatter/ms
  .width( 300 )///.../ms
  .height( 200 )///.../ms
  .nelements( 10 )///.../ms
  .title( function() {return selCellLine;} )///.../ms
  .axisTitleX( "Drug concentration" )///.../ms
  .axisTitleY( "Inhibition" )///.../ms
  .domainY( [-25, 100] )///.../ms
  .ticksX( function() {///.../ms
    var ticks = [d3.range( 5 ), ///.../ms
      d3.range( 5 ).map( function( e ) {///.../ms
        return inputData.RTG[selDrugs[0]][selCellLine].minConc * ///.../ms
                Math.pow( 10, e )///.../ms
      } ),///.../ms
      d3.range( 5 ).map( function( e ) {///.../ms
        return inputData.RTG[selDrugs[1]][selCellLine].minConc * ///.../ms
                Math.pow( 10, e )///.../ms
      })];///.../ms
    ticks.colour = ["blue", "red"];///.../ms
    return ticks;///.../ms
  })///.../ms
  .x( function( k ) {///.../ms
    return k % 5;///.../ms
  } )///.../ms
  .y( function( k ) {///.../ms
    var ind = Math.floor( k / 5 );///.../ms
    return inputData.RTG[selDrugs[ind]][selCellLine]["D" + (k % 5 + 1)];///.../ms
  })///.../ms
  .colour( function( k ) {///.../ms
    return k > 4 ? "red" : "blue";///.../ms
  } );///.../ms
lc.xLine( "lines", curveFit )///scatter/ms
  .nelements( 2 )///.../ms
  .lineFun( function( x, k ) {///.../ms
    return get_curve( selDrugs[k], selCellLine, x );///.../ms
  })///.../ms
  .colour(function( k ){///.../ms
    return k == 0 ? "blue" : "red";///.../ms
  })///.../ms
  .place( "#scatterplot" );///scatter/ms
curveFit.legend.add_block(function() {return [selDrugs, ["blue", "red"]];},///.../ms 
                      "colour", "Drugs");///.../ms  
</script>///.../html
../src/data/inputdata.js///input

<div class="comments">
<div class="expl" id="skip">
<p>Some lines of code, that have been already described in the previous examples, were omitted 
for the sake of simplicity. At the bottom of the page you can find the complete code.</p>
</div>

<div class="expl" id="scatter">
<p>In this example all of the charts are defined almost the same way as in the previous example.
So here, we omit most of the properties of all other charts. The full code you can find at the bottom of the page.</p>
</div>

<div class="expl" id="value">
<p>Here, our callback function that returns values for each cell will now use information from another chart 
(the correlation scatter plot). In this case the both charts can depending on each other.</p>
</div>

<div class="expl" id="get_marked">
<p><a href="layer">get_marked</a> returns an array with IDs of all currently marked elements. In case of a chart
with layers the IDs are paired with the corresponding layer ID. So here we first filter for only those that belong
to out scatter plot layer (leaving the diagonal line out) and then get the IDs of the points.</p>
</div>

<div class="expl" id="ifempty">
<p>If none of points is marked or the user marked only one point and therefore it's impossible to calculate the
correlation values, we will calculate correlations using all the cell lines.</p>
</div>

<div class="expl" id="calcValues">
<p>Now in the <code>selCL</code> variable we have a list of all the selected cell lines and so we can use it
instead of list of all the cell lines as it has been done previously. For each selected cell line, we get an
array of all the scores against the two drugs and calculate Pearson correlation between the two.</p>
</div>

<div class="expl" id="markedUpdated">
<p>Similar to the <a href="layer">on_click</a> property, the function provided to the <a href="layer">markedUpated</a> is
called every time any element is selected or deselected. Here, we just update colour of all the cells of the heatmap.</p>
</div>

<div class="expl" id="selectedCellLines">
<p>In the <code>selCL</code> variable we will store a list of all the currently selected cell lines.</p>
</div>

<div class="expl" id="ifdefined">
<p>The first time this function is used will be when the heatmap is placed. An by that time the 
<code>scatterplot</code> will have not yet been defined. Therefore here we make sure that we use
its methods only if the <code>scatterplot</code> exists. Otherwise we assume that there are no marked
points.</p>
</div>

</div>

<div class="description">
<h1>Recalculate correlation values</h1>
<p>This is the last of the series of examples, where we step by step introduce new chart properties for the
same set of charts.</p>
<p>Here, we utilise another aspect of in-built interactive functionality in the <i>linked-charts</i> library.
In the instrument panel, one can find a "Select elements" button. If it is pressed, then the user can select or
deselect cells or points by clicking and brushing. A double click will deselect all the elements. You can also
use this mode just keepint the <code>Shift</code> key pressed. Just like clicking, selecting or - in the
<i>linked-charts</i> terms, <b>marking</b> - the elements, can trigger various actions. Let's, for example,
allow user to define, what cell lines to use for correlation calculations, by marking them on the correlation
scatter plot. Try to mark several points on the top right plot and see how the heatmap changes. By the way, 
don't forget that you can recluster rows or columns after the correlation values have been recalculated.
Use the instrument panel for this.</p>
<p>The data used here are generated in a drug-screening experiment. 50 drugs at 5 different concentrations 
were tested against 21 pancreatic cancer cell lines. The heatmap shows drug-drug correlation. Like in the 
previous example, a click on a cell of the heatmap reveals the underlying statistics by demonstrating on 
the scatter plot (right upper corner) the values of avarage inhibition for all tested cell lines and the two
selected drugs. By clicking on a data point one can select a cell line, and thus change the third plot 
(right bottom corner) that demonstrates individual inhibition percent values for the two selected drugs and 
the selected cell line.</p>
</div>	
</div>